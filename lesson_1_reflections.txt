How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlighted the changes between the files so I only had to search the 
newly introduced code for errors.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will make it easy to find why a change was made or revert changes we 
don't want to keep.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   Pro: Can limit commits to logically complete changes

   Con: Can lose changes if the file is deleted before I commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is targetted for software projects, where a single logically connected
 change can affect multiple files. Google Docs automatically commits changes,
so it probably can't tell which changes are related.

How can you use the commands git log and git diff to view the history of files?

    git log will tell me all the revisions that have been checked in
    git diff will allow me to to check the changes that were made in those 
revisions

How might using version control make you more confident to make changes that
could break something?

    If I break something in an unfixable manner, I can always revert back to 
a working version

Now that you have your workspace set up, what do you want to try using Git for?

    Manage my Android projects
